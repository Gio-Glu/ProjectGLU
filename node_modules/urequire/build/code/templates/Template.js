// Generated by uRequire v0.7.0-beta.23 target: 'lib' template: 'nodejs'

var _ = require('lodash'),
    _B = require('uberscore'),
    UError = require('../utils/UError');

var l = new _B.Logger('uRequire/templates/Template');

var Template, VERSION, slice = [].slice;
_.mixin(require("underscore.string").exports());
VERSION = require("../urequire").VERSION;
Template = function () {
  function Template() {
    this.getp = function (_this) {
      return function (path, options) {
        if (options == null) {
          options = {};
        }
        if (!path) {
          return _this;
        } else {
          return _B.getp(_this, path, _.defaults(options, { separator: "." }));
        }
      };
    }(this);
    this.setp = function (_this) {
      return function (path, value, options) {
        if (options == null) {
          options = {};
        }
        if (!path) {
          return _this;
        } else {
          return _B.setp(_this, path, value, _.defaults(options, { separator: "." }));
        }
      };
    }(this);
  }
  Template.prototype.__functionIIFE = function () {
    var codeBody, i, param, paramValuePairs, value;
    codeBody = arguments[0], paramValuePairs = 2 <= arguments.length ? slice.call(arguments, 1) : [];
    return "(function (" + function () {
      var j, len, results;
      results = [];
      for (i = j = 0, len = paramValuePairs.length; j < len; i = ++j) {
        param = paramValuePairs[i];
        if (i % 2 === 0) {
          results.push(param);
        }
      }
      return results;
    }().join(", ") + ") {\n  " + codeBody + "\n}).call(this" + (paramValuePairs.length > 0 ? ", " : "") + function () {
      var j, len, results;
      results = [];
      for (i = j = 0, len = paramValuePairs.length; j < len; i = ++j) {
        value = paramValuePairs[i];
        if (i % 2 !== 0) {
          results.push(value);
        }
      }
      return results;
    }().join(", ") + ")";
  };
  Template.prototype.__function = function () {
    var codeBody, i, param, params;
    codeBody = arguments[0], params = 2 <= arguments.length ? slice.call(arguments, 1) : [];
    return "function (" + function () {
      var j, len, results;
      results = [];
      for (i = j = 0, len = params.length; j < len; i = ++j) {
        param = params[i];
        results.push(param);
      }
      return results;
    }().join(", ") + ") {\n  " + codeBody + "\n}";
  };
  Template.prototype.deb = function (debugLevel, str) {
    var ref, ref1, ref2, ref3, scopeInfo;
    if ((((ref = this.build) != null ? (ref1 = ref.template) != null ? ref1.debugLevel : void 0 : void 0) || 0) >= debugLevel) {
      if (str) {
        str = str.replace("\n", " | ");
        scopeInfo = this.scope + ": " + (this.scope === "module" ? "'" + this.module.path + "', bundle: " : "") + ("'" + this.bundle.name + "'");
        if ((((ref2 = this.build) != null ? (ref3 = ref2.template) != null ? ref3.debugLevel : void 0 : void 0) || 0) >= debugLevel * 10) {
          return "\n//uRequire: " + str + " (" + scopeInfo + ")" + "\nconsole.log(\"\\n" + (this.scope === "module" ? "\\u001b[32m" : "\\u001b[33m") + "uRequire:" + str + " (" + scopeInfo + ")" + "\");\n";
        } else {
          return "\n//uRequire: " + str + " (" + scopeInfo + ")\n";
        }
      } else {
        return true;
      }
    } else {
      if (str) {
        return "";
      } else {
        return false;
      }
    }
  };
  Template.prototype.sp = function () {
    var descr, name, p, sect, sections, startMsg;
    sections = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    return function () {
      var j, len, results;
      results = [];
      for (j = 0, len = sections.length; j < len; j++) {
        sect = sections[j];
        if (_.isFunction(sect)) {
          sect = sect();
        }
        if (_.isString(sect)) {
          name = sect;
        } else if (_.isArray(sect)) {
          name = sect[0];
          descr = sect[1];
        } else if (_B.isHash(sect)) {
          name = sect.name, descr = sect.descr;
        } else {
          name = void 0;
        }
        if (name) {
          if (p = this.getp(name)) {
            startMsg = "## START ## of '" + name + "' " + ((descr ? ": " + descr : void 0) || "");
            if (this.deb(10)) {
              results.push(this.deb(10, startMsg) + p + this.deb(20, "## END ## of '" + name + "'"));
            } else {
              results.push("\n" + p + "\n");
            }
          } else {
            results.push("");
          }
        } else {
          results.push("");
        }
      }
      return results;
    }.call(this).join("");
  };
  Object.defineProperties(Template.prototype, {
    uRequireBanner: {
      get: function () {
        return "// Generated by uRequire v" + VERSION + " " + (this.build.target ? "target: '" + this.build.target + "'" : "") + " template: '" + this.build.template.name + "'\n";
      }
    },
    runtimeInfo: {
      get: function () {
        return "var __isAMD = !!(typeof define === 'function' && define.amd),\n    __isNode = (typeof exports === 'object'),\n    __isWeb = !__isNode;" + (this.deb(50) ? "\nconsole.log('uRequire: runtimeInfo:\\n__isAMD=', __isAMD, '\\n__isNode=', __isNode, '\\n__isWeb=', __isWeb);" : "");
      }
    },
    globalSelector: {
      get: function () {
        return "(typeof exports === 'object' || typeof window === 'undefined' ? global : window)";
      }
    }
  });
  return Template;
}();
module.exports = Template;

;