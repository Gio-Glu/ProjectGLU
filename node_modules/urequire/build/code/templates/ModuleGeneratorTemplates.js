// Generated by uRequire v0.7.0-beta.23 target: 'lib' template: 'nodejs'

var _ = require('lodash'),
    _B = require('uberscore'),
    UError = require('../utils/UError');

var l = new _B.Logger('uRequire/templates/ModuleGeneratorTemplates');

var ModuleGeneratorTemplates, Template, isTrueOrFileMatch, l, extend = function (child, parent) {
    for (var key in parent) {
      if (hasProp.call(parent, key))
        child[key] = parent[key];
    }
    function ctor() {
      this.constructor = child;
    }
    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
    child.__super__ = parent.prototype;
    return child;
  }, hasProp = {}.hasOwnProperty, indexOf = [].indexOf || function (item) {
    for (var i = 0, l = this.length; i < l; i++) {
      if (i in this && this[i] === item)
        return i;
    }
    return -1;
  };
_.mixin(require("underscore.string").exports());
l = new _B.Logger("uRequire/ModuleGeneratorTemplates");
isTrueOrFileMatch = require("../config/isTrueOrFileMatch");
Template = require("./Template");
ModuleGeneratorTemplates = function (superClass) {
  extend(ModuleGeneratorTemplates, superClass);
  ModuleGeneratorTemplates.prototype.scope = "module";
  function ModuleGeneratorTemplates(module1) {
    this.module = module1;
    ModuleGeneratorTemplates.__super__.constructor.apply(this, arguments);
  }
  Object.defineProperties(ModuleGeneratorTemplates.prototype, {
    bundle: {
      get: function () {
        return this.module.bundle;
      }
    },
    build: {
      get: function () {
        return this.bundle.build;
      }
    },
    isCombined: {
      get: function () {
        return this.build.template.name === "combined";
      }
    },
    namePrint: {
      get: function () {
        if (this.module.name) {
          return "'" + this.module.name + "', ";
        } else {
          return "";
        }
      }
    },
    isInjectExportsModule: {
      get: function () {
        var ref, ref1, ref2, ref3, ref4, ref5;
        return this.module.kind === "nodejs" || this.module.isInjectExportsModule && !(((ref = this.module.defineArrayDeps) != null ? (ref1 = ref[0]) != null ? typeof ref1.isEqual === "function" ? ref1.isEqual("exports") : void 0 : void 0 : void 0) && ((ref2 = this.module.parameters) != null ? ref2[0] : void 0) === "exports" && ((ref3 = this.module.defineArrayDeps) != null ? (ref4 = ref3[1]) != null ? typeof ref4.isEqual === "function" ? ref4.isEqual("module") : void 0 : void 0 : void 0) && ((ref5 = this.module.parameters) != null ? ref5[1] : void 0) === "module");
      }
    },
    injectExportsModuleParamsPrint: {
      get: function () {
        if (this.isInjectExportsModule) {
          return ", exports, module";
        } else {
          return "";
        }
      }
    },
    parametersPrint: {
      get: function () {
        var par;
        return "require" + this.injectExportsModuleParamsPrint + function () {
          var j, len, ref, results;
          ref = this.module.parameters;
          results = [];
          for (j = 0, len = ref.length; j < len; j++) {
            par = ref[j];
            results.push(", " + par);
          }
          return results;
        }.call(this).join("");
      }
    },
    defineArrayDepsPrint: {
      get: function () {
        var allowEmptyDefineDepsArray, dep;
        allowEmptyDefineDepsArray = _.isEmpty(this.module.defineArrayDeps) && this.isScanAllow && !_.any(this.module.ext_requireDeps, function (d) {
          return d.isNode;
        });
        return (allowEmptyDefineDepsArray ? "" : this.isInjectExportsModule ? "['require', 'exports', 'module'" : "['require'") + function () {
          var j, len, ref, results;
          ref = this.module.defineArrayDeps;
          results = [];
          for (j = 0, len = ref.length; j < len; j++) {
            dep = ref[j];
            results.push(", " + dep.name({ quote: true }));
          }
          return results;
        }.call(this).join("") + (allowEmptyDefineDepsArray ? "" : "], ");
      }
    },
    useStrictModule: {
      get: function () {
        if (this.module.isUseStrict && !(this.isCombined && _B.isTrue(this.build.useString))) {
          return "'use strict';";
        } else {
          return "";
        }
      }
    },
    runtimeInfo: {
      get: function () {
        if (this.module.isRuntimeInfo || this.isRootExports && this.exportRootCheck) {
          return Template.prototype.runtimeInfo;
        } else {
          return "";
        }
      }
    },
    isRootExports: {
      get: function () {
        var ref;
        return !(this.module.isRootExports_ignore || _.isEmpty(this.module.flags.rootExports) || _.isEmpty(this.build.rootExports.runtimes)) && !(((ref = this.build.template.name) === "UMD" || ref === "UMDplain") && !this.build.noLoaderUMD && indexOf.call(this.build.rootExports.runtimes, "AMD") < 0 && indexOf.call(this.build.rootExports.runtimes, "node") < 0);
      }
    },
    exportRootCheck: {
      get: function () {
        var checks;
        checks = [];
        if (indexOf.call(this.build.rootExports.runtimes, "AMD") < 0) {
          checks.push("!__isAMD");
        }
        if (indexOf.call(this.build.rootExports.runtimes, "node") < 0) {
          checks.push("!__isNode");
        }
        if (indexOf.call(this.build.rootExports.runtimes, "script") < 0) {
          checks.push("!(__isWeb && !__isAMD)");
        }
        return checks.join(" && ");
      }
    }
  });
  ModuleGeneratorTemplates.prototype._rootExportsNoConflict = function (rootName, returnModule) {
    var expCheck, expVar, i;
    if (rootName == null) {
      rootName = "root";
    }
    if (returnModule == null) {
      returnModule = true;
    }
    return this.deb(10, "*** START *** rootExports & noConflict() : exporting module '" + this.module.path + "' to root='" + rootName + "' & attaching `noConflict()`.") + (this.module.flags.noConflict ? function () {
      var j, len, ref, results;
      ref = this.module.flags.rootExports;
      results = [];
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        expVar = ref[i];
        results.push((i === 0 ? "var " : "    ") + "__old__" + _.underscored(expVar) + i + " = " + rootName + "['" + expVar + "']");
      }
      return results;
    }.call(this).join(",\n") + ";\n" : "") + ((expCheck = this.exportRootCheck) ? "if (" + expCheck + ") {" : "") + function () {
      var j, len, ref, results;
      ref = this.module.flags.rootExports;
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        expVar = ref[j];
        results.push(rootName + "['" + expVar + "'] = __umodule__");
      }
      return results;
    }.call(this).join(";\n") + ";\n" + (this.module.flags.noConflict ? "\n__umodule__.noConflict = " + this.__function(function () {
      var j, len, ref, results;
      ref = this.module.flags.rootExports;
      results = [];
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        expVar = ref[i];
        results.push(rootName + "['" + expVar + "'] = __old__" + _.underscored(expVar) + i);
      }
      return results;
    }.call(this).join(";\n") + ";" + "\nreturn __umodule__;") + ";" : "") + "\n" + (expCheck ? "}" : "") + (returnModule ? "return __umodule__;" : "") + this.deb(10, "*** END *** rootExports & noConflict()");
  };
  Object.defineProperties(ModuleGeneratorTemplates.prototype, {
    factoryBodyAMD: {
      get: function () {
        return this.factoryBodyAll("AMD");
      }
    },
    factoryBodyNodejs: {
      get: function () {
        return this.factoryBodyAll("nodejs");
      }
    },
    _moduleExports_ModuleFactoryBody: {
      get: function () {
        return "module.exports = " + this.__functionIIFE(this.module.factoryBody) + ";";
      }
    }
  });
  ModuleGeneratorTemplates.prototype.factoryBodyAll = function (toKind) {
    if (toKind == null) {
      toKind = function () {
        throw new Error("factoryBodyAll requires `toKind` in ['AMD', 'nodejs']");
      }();
    }
    return this.sp("useStrictModule", !this.isCombined ? "bundle.commonCode" : void 0, !this.isCombined ? "module.mergedCode" : void 0, "module.beforeBody", toKind === "nodejs" && this.module.kind === "AMD" ? [
      "_moduleExports_ModuleFactoryBody",
      "body of original '" + this.module.kind + "' module, assigned to module.exports"
    ] : [
      "module.factoryBody",
      "body of original '" + this.module.kind + "' module"
    ], "module.afterBody") + (toKind === "AMD" && this.module.kind === "nodejs" ? this.deb(20, "returning nodejs `exports.module` as AMD factory result.") + "\nreturn module.exports;" : "");
  };
  ModuleGeneratorTemplates.prototype._genFullBody = function (fullBody) {
    fullBody = this.sp("runtimeInfo", [
      "module.preDefineIIFEBody",
      "statements/declarations before define(), enclosed in an IIFE (function(){})()."
    ]) + fullBody;
    return this.uRequireBanner + (this.module.isBare ? fullBody : this.module.isGlobalWindow ? this.__functionIIFE(fullBody, "window", this.globalSelector, "global", this.globalSelector) : this.__functionIIFE(fullBody)) + ";";
  };
  ModuleGeneratorTemplates.prototype._AMD_plain_define = function () {
    return "define(" + this.namePrint + this.defineArrayDepsPrint + this.__function(!this.isRootExports ? this.sp("factoryBodyAMD") : "var __umodule__ = " + this.__functionIIFE(this.sp("factoryBodyAMD"), this.parametersPrint, this.parametersPrint) + ";\n" + this._rootExportsNoConflict("window"), this.parametersPrint) + ")";
  };
  ModuleGeneratorTemplates.prototype.combined = function () {
    return this._AMD_plain_define();
  };
  ModuleGeneratorTemplates.prototype.AMD = function () {
    return this._genFullBody(this._AMD_plain_define());
  };
  ModuleGeneratorTemplates.prototype.nodejs = function () {
    var dep, nodeDeps, param, pi, prCnt;
    prCnt = 0;
    nodeDeps = this.module.nodeDeps;
    return this._genFullBody((_.any(nodeDeps, function (_this) {
      return function (dep, depIdx) {
        var ref;
        return !dep.isSystem && (((ref = _this.module) != null ? ref.parameters : void 0) || [])[depIdx];
      };
    }(this)) ? "\nvar " : "") + function () {
      var j, len, ref, results;
      ref = this.module.parameters;
      results = [];
      for (pi = j = 0, len = ref.length; j < len; pi = ++j) {
        param = ref[pi];
        if (!(dep = nodeDeps[pi]).isSystem) {
          results.push((prCnt++ === 0 ? "" : "    ") + param + " = require(" + dep.name({ quote: true }) + ")");
        }
      }
      return results;
    }.call(this).join(",\n") + (prCnt === 0 ? "" : ";") + function () {
      var j, len, ref, results;
      ref = nodeDeps.slice(this.module.parameters.length);
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        dep = ref[j];
        results.push("\nrequire(" + dep.name({ quote: true }) + ");");
      }
      return results;
    }.call(this).join("") + this.sp("factoryBodyNodejs") + (this.isRootExports ? "var __umodule__ = module.exports;\n" + this._rootExportsNoConflict("global", false) : ""));
  };
  ModuleGeneratorTemplates.prototype.UMDplain = function () {
    return this.UMD(false);
  };
  ModuleGeneratorTemplates.prototype.UMD = function (isNodeRequirer) {
    var badDeps, define, nDep, nr, replaceParamsPrint;
    if (isNodeRequirer == null) {
      isNodeRequirer = true;
    }
    replaceParamsPrint = function (paramsPrint) {
      return paramsPrint.replace("require", "_require").replace("exports", "_exports").replace("module", "_module");
    };
    nr = isNodeRequirer ? "nr." : "";
    define = "define(" + this.namePrint + this.defineArrayDepsPrint + (!this.isRootExports ? "factory" : this.__function("return rootExport(window, factory(" + this.parametersPrint + "));", this.parametersPrint)) + ");";
    return this._genFullBody(this.__functionIIFE((this.isRootExports ? "var rootExport = " + this.__function(this._rootExportsNoConflict(), "root, __umodule__") + ";\n" : "") + ("if (typeof exports === 'object') {" + (isNodeRequirer ? "\n    var nr = new (require('urequire').NodeRequirer) ('" + this.module.path + "', module, require, __dirname, '" + this.module.webRootMap + "', " + this.build.template.debugLevel + ");" : "") + "\n    module.exports = " + (this.isRootExports ? "rootExport(global, " : "") + "factory(" + nr + "require" + this.injectExportsModuleParamsPrint + function () {
      var j, len, ref, results;
      ref = this.module.nodeDeps;
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        nDep = ref[j];
        if (nDep.isSystem) {
          results.push(", " + nDep.name());
        } else {
          results.push(", " + nr + "require(" + nDep.name({ quote: true }) + ")");
        }
      }
      return results;
    }.call(this).join("") + ")" + (this.isRootExports ? ")" : "") + ";\n} else") + (this.module.isNoLoaderUMD || this.module.isWarnNoLoaderUMD ? " if (typeof define === 'function' && define.amd) { " + define + " }" : " " + define) + (this.module.isNoLoaderUMD ? " else {\n" + (!_.isEmpty(badDeps = _.filter(this.module.defineArrayDeps, function (dep) {
      var ref;
      return (ref = dep.type) === "bundle" || ref === "external" || ref === "notFoundInBundle" || ref === "nodeLocal";
    })) ? "throw new Error(\"UMD with bundle or external deps runs only with an AMD or CommonJS loader.\\n" + "Can`t load these deps: " + _.map(badDeps, function (d) {
      return "'" + d.name() + "' (" + d.type + ")";
    }).join("', '") + "\");" : (!_.isEmpty(this.module.defineArrayDeps) ? "var modNameVars = {" + _.map(this.module.defineArrayDeps, function (_this) {
      return function (dep) {
        return "'" + dep.name() + "': " + JSON.stringify(_this.bundle.all_depsVars[dep.name({ relative: "bundle" })]);
      };
    }(this)).join(",") + "},\n  _require = function(modyle) {\n    if (modNameVars[modyle])\n      for (var _i = 0; _i < modNameVars[modyle].length; _i++)\n        if (window.hasOwnProperty(modNameVars[modyle][_i]))\n          return window[modNameVars[modyle][_i]];\n\n    var msg = \"uRequire: Running UMD module as plain <script>, failed to `require('\" + modyle + \"')`:\";\n    if (modNameVars[modyle] && modNameVars[modyle].length)\n      msg = msg + \"it`s not exported on `window` as any of these vars: \" + JSON.stringify(modNameVars[modyle]);\n    else\n      msg = msg + \"WITHOUT an AMD or CommonJS loader & \" +\n        \"no identifier (i.e varName or param name) associated with dependency '\"+modyle+\"' in the bundle of '" + this.module.path + "'.\";\n\n    throw new Error(msg);\n  }," : "var _require = function(modyle){\n  throw new Error(\"uRequire: Loading UMD module as <script>, failed to `require('\" + modyle + \"')`: reason unexpected !\");\n},") + " _exports = {}, _module = {exports: _exports};\n" + (!this.isRootExports ? "factory(" + replaceParamsPrint(this.parametersPrint) + ");" : "rootExport(window, factory(" + replaceParamsPrint(this.parametersPrint) + "));")) + ";\n}" : this.module.isWarnNoLoaderUMD ? " else throw new Error('uRequire: Loading UMD module as <script>, without `build.noLoaderUMD`');" : ""), "factory", this.__function(this.sp("factoryBodyAMD"), this.parametersPrint)) + ";");
  };
  return ModuleGeneratorTemplates;
}(Template);
module.exports = ModuleGeneratorTemplates;

;