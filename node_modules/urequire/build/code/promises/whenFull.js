// Generated by uRequire v0.7.0-beta.23 target: 'lib' template: 'nodejs'

var _ = require('lodash'),
    _B = require('uberscore'),
    UError = require('../utils/UError');

var l = new _B.Logger('uRequire/promises/whenFull');

var When, extraFn, extraFunctions, j, len, name, whenLibs, wlib;
When = require("when");
whenLibs = [
  "keys",
  "function",
  "node",
  "callbacks",
  "generator",
  "sequence",
  "pipeline",
  "parallel",
  "poll",
  "guard"
];
for (j = 0, len = whenLibs.length; j < len; j++) {
  wlib = whenLibs[j];
  if (_.isUndefined(When[wlib])) {
    When[wlib] = require("when/" + wlib);
  }
}
extraFunctions = {
  each: function (collection, handler) {
    var isArray, iterArray;
    if (_B.isHash(collection)) {
      iterArray = _.keys(collection);
      isArray = false;
    } else {
      if (_.isArray(collection)) {
        iterArray = collection;
        isArray = true;
      } else {
        return When.reject(new Error("When.each: collection is neither [] or {}."));
      }
    }
    return When.iterate(function (i) {
      return i + 1;
    }, function (i) {
      return !(i < iterArray.length);
    }, function (i) {
      var idxOrKey;
      if (isArray) {
        idxOrKey = i;
      } else {
        idxOrKey = iterArray[i];
      }
      return handler(collection[idxOrKey], idxOrKey);
    }, 0);
  }
};
for (name in extraFunctions) {
  extraFn = extraFunctions[name];
  if (_.isUndefined(When[name])) {
    When[name] = extraFn;
  }
}
module.exports = When;

;